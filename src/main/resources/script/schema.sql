drop table if exists ACCOUNT CASCADE;
drop table if exists PERMISSION CASCADE;
drop table if exists PERMISSION_ROLE CASCADE;
drop table if exists ROLE CASCADE;
drop table if exists ROLE_user CASCADE;


create table ACCOUNT (id integer generated by default as identity,
account_expired boolean, account_locked boolean, credentials_expired boolean,
email varchar(255), enabled boolean not null, password varchar(255),
user_name varchar(255), primary key (id));

create table PERMISSION (id integer generated by default as identity, name varchar(255), primary key (id));

create table PERMISSION_ROLE (ROLE_id integer not null, PERMISSION_id integer not null);

create table ROLE (id integer generated by default as identity, name varchar(255), primary key (id));
create table ROLE_user (user_id integer not null, ROLE_id integer not null);
alter table PERMISSION_ROLE add constraint FK3tuvkbyi6wcytyg21hvpd6txw foreign key (PERMISSION_id) references PERMISSION;
alter table PERMISSION_ROLE add constraint FK50sfdcvbvdaclpn7wp4uop4ml foreign key (ROLE_id) references ROLE;
alter table ROLE_user add constraint FKiqpmjd2qb4rdkej916ymonic6 foreign key (ROLE_id) references ROLE;
alter table ROLE_user add constraint FKnw63micwfaof0c7narim1t3kh foreign key (user_id) references ACCOUNT;
